{
    "C++ Class Template": {
        "prefix": "HPP",
        "body": [
            "/* ************************************************************************** */",
            "/*                                                                            */",
            "/*                                                        :::      ::::::::   */",
            "/*   main.cpp                                           :+:      :+:    :+:   */",
            "/*                                                    +:+ +:+         +:+     */",
            "/*   By: ${1:andre-da} <${2:andre-da@student.42.fr}>          +#+  +:+       +#+        */",
            "/*                                                +#+#+#+#+#+   +#+           */",
            "/*   Created: ${3:2023/10/04} ${4:15:32:24} by ${1:andre-da}          #+#    #+#             */",
            "/*   Updated: ${5:2023/10/10} ${6:18:14:36} by ${1:andre-da}         ###   ########.fr       */",
            "/*                                                                            */",
            "/* ************************************************************************** */",
            "",
            "#ifndef ${TM_FILENAME_BASE}_HPP",
            "# define ${TM_FILENAME_BASE}_HPP",
            "",
            "# include \"libft.h\"",
            "",
            "class ${TM_FILENAME_BASE}",
            "{",
            "    private:",
            "    ",
            "",
            "    public:",
            "        ${TM_FILENAME_BASE}();",
            "        ${TM_FILENAME_BASE}(const ${TM_FILENAME_BASE} &copy);",
            "        ${TM_FILENAME_BASE}& operator=(const ${TM_FILENAME_BASE} &other);",
            "        ~${TM_FILENAME_BASE}();",
            "};",
            "",
            "#endif"
        ],
        "description": "Creates a C++ class template with private section before public"
    },
    "C++ Main Template": {
        "prefix": "MAIN",
        "body": [
            "/* ************************************************************************** */",
            "/*                                                                            */",
            "/*                                                        :::      ::::::::   */",
            "/*   main.cpp                                           :+:      :+:    :+:   */",
            "/*                                                    +:+ +:+         +:+     */",
            "/*   By: ${1:andre-da} <${2:andre-da@student.42.fr}>          +#+  +:+       +#+        */",
            "/*                                                +#+#+#+#+#+   +#+           */",
            "/*   Created: ${3:2023/10/04} ${4:15:32:24} by ${1:andre-da}          #+#    #+#             */",
            "/*   Updated: ${5:2023/10/10} ${6:18:14:36} by ${1:andre-da}         ###   ########.fr       */",
            "/*                                                                            */",
            "/* ************************************************************************** */",
            "",
            "#include \"../includes/\"",
            "",
            "int main(int argc, char *argv[])",
            "{",
            "",
            "    return (0);",
            "}"
        ],
        "description": "Creates a simple C++ main function template with header comment"
    },
    "C++ Library Header Template": {
        "prefix": "LIBFT",
        "body": [
            "/* ************************************************************************** */",
            "/*                                                                            */",
            "/*                                                        :::      ::::::::   */",
            "/*   main.cpp                                           :+:      :+:    :+:   */",
            "/*                                                    +:+ +:+         +:+     */",
            "/*   By: ${1:andre-da} <${2:andre-da@student.42.fr}>          +#+  +:+       +#+        */",
            "/*                                                +#+#+#+#+#+   +#+           */",
            "/*   Created: ${3:2023/10/04} ${4:15:32:24} by ${1:andre-da}          #+#    #+#             */",
            "/*   Updated: ${5:2023/10/10} ${6:18:14:36} by ${1:andre-da}         ###   ########.fr       */",
            "/*                                                                            */",
            "/* ************************************************************************** */",
            "",
            "#ifndef LIBFT_H",
            "# define LIBFT_H",
            "",
            "# include <iostream>\t\t// For input and output stream",
            "# include <string>\t\t\t// For string class and functions",
            "# include <cstring>\t\t\t// For C-style string functions",
            "# include <cmath>\t\t\t// For common mathematical functions",
            "# include <vector>\t\t\t// For the vector container",
            "# include <algorithm>\t\t// For standard algorithms (sort, find, etc.)",
            "# include <map>\t\t\t\t// For the map container",
            "# include <unordered_map>\t// For the unordered_map container",
            "# include <set>\t\t\t\t// For the set container",
            "# include <unordered_set>\t// For the unordered_set container",
            "# include <queue>\t\t\t// For the queue container",
            "# include <stack>\t\t\t// For the stack container",
            "# include <list>\t\t\t// For the list container",
            "# include <deque>\t\t\t// For the deque container",
            "# include <iterator>\t\t// For iterators",
            "# include <functional>\t\t// For function objects and predefined function objects",
            "# include <utility>\t\t\t// For pair and utility functions",
            "# include <sstream>\t\t\t// For string stream classes",
            "# include <fstream>\t\t\t// For file stream classes",
            "# include <iomanip>\t\t\t// For input/output manipulation",
            "# include <chrono>\t\t\t// For time utilities",
            "# include <thread>\t\t\t// For threading support",
            "# include <mutex>\t\t\t// For mutual exclusion primitives",
            "# include <atomic>\t\t\t// For atomic operations",
            "# include <memory>\t\t\t// For smart pointers (unique_ptr, shared_ptr, etc.)",
            "# include <exception>\t\t// For standard exception classes",
            "# include <stdexcept>\t\t// For standard exception classes (runtime_error, etc.)",
            "# include <limits>\t\t\t// For numeric limits",
            "# include <typeinfo>\t\t// For type information",
            "# include <random>\t\t\t// For random number generation",
            "# include <bitset>\t\t\t// For bitset operations",
            "",
            "# define RED\t\"\\x1b[31;1m\"",
            "# define GREEN\t\"\\x1b[32;1m\"",
            "# define BLUE\t\"\\x1b[34;1m\"",
            "# define CYAN\t\"\\x1b[36;1m\"",
            "# define YELLOW\t\"\\033[33;1m\"",
            "# define RESET\t\"\\x1b[0m\"",
            "",
            "void errorMessage(std::string message);",
            "",
            "#endif"
        ],
        "description": "Creates a C++ library header file template with necessary includes"
    },
    "C++ Source File Template": {
        "prefix": "CPP",
        "body": [
            "/* ************************************************************************** */",
            "/*                                                                            */",
            "/*                                                        :::      ::::::::   */",
            "/*   main.cpp                                           :+:      :+:    :+:   */",
            "/*                                                    +:+ +:+         +:+     */",
            "/*   By: ${1:andre-da} <${2:andre-da@student.42.fr}>          +#+  +:+       +#+        */",
            "/*                                                +#+#+#+#+#+   +#+           */",
            "/*   Created: ${3:2023/10/04} ${4:15:32:24} by ${1:andre-da}          #+#    #+#             */",
            "/*   Updated: ${5:2023/10/10} ${6:18:14:36} by ${1:andre-da}         ###   ########.fr       */",
            "/*                                                                            */",
            "/* ************************************************************************** */",
            "",
            "#include \"../includes/${TM_FILENAME_BASE}.hpp\"",
            "",
            "/*----------------------------------------------------------------------------*/",
            "/*------------------------- Constructors & Destructor -----------------------*/",
            "/*----------------------------------------------------------------------------*/",
            "",
            "${TM_FILENAME_BASE}::${TM_FILENAME_BASE}() {",
            "    std::cout << \"Default Constructor called\" << std::endl;",
            "}",
            "",
            "${TM_FILENAME_BASE}::${TM_FILENAME_BASE}(const ${TM_FILENAME_BASE} &copy) {",
            "    this->type = copy.type;",
            "    std::cout << \"Copy Constructor called\" << std::endl;",
            "}",
            "",
            "${TM_FILENAME_BASE}::~${TM_FILENAME_BASE}() {",
            "    std::cout << \"Destructor called\" << std::endl;",
            "}",
            "",
            "/*----------------------------------------------------------------------------*/",
            "/*--------------------------------- Operator ---------------------------------*/",
            "/*----------------------------------------------------------------------------*/",
            "",
            "${TM_FILENAME_BASE} &${TM_FILENAME_BASE}::operator=(const ${TM_FILENAME_BASE} &other) {",
            "    if (this != &other) {",
            "        this->type = other.type;",
            "    }",
            "    std::cout << \"Copy Assignment Operator called\" << std::endl;",
            "    return *this;",
            "}",
            "",
            "/*----------------------------------------------------------------------------*/",
            "/*------------------------------ Member Functions ----------------------------*/",
            "/*----------------------------------------------------------------------------*/",
            "",
        ],
        "description": "Creates a C++ source file with standard header comment and method implementation"
    }
}
