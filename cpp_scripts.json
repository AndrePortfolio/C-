{
    "C++ Class Template": {
        "prefix": "HPP",
        "body": [
            "/* ************************************************************************** */",
            "/*                                                                            */",
            "/*                                                        :::      ::::::::   */",
            "/*   main.cpp                                           :+:      :+:    :+:   */",
            "/*                                                    +:+ +:+         +:+     */",
            "/*   By: ${1:andre-da} <${2:andre-da@student.42.fr}>          +#+  +:+       +#+        */",
            "/*                                                +#+#+#+#+#+   +#+           */",
            "/*   Created: ${3:2023/10/04} ${4:15:32:24} by ${1:andre-da}          #+#    #+#             */",
            "/*   Updated: ${5:2023/10/10} ${6:18:14:36} by ${1:andre-da}         ###   ########.fr       */",
            "/*                                                                            */",
            "/* ************************************************************************** */",
            "",
            "#ifndef ${TM_FILENAME_BASE}_HPP",
            "# define ${TM_FILENAME_BASE}_HPP",
            "",
            "class ${TM_FILENAME_BASE}",
            "{",
            "    private:",
            "    ",
            "",
            "    public:",
            "        ${TM_FILENAME_BASE}();",
            "        ${TM_FILENAME_BASE}(const ${TM_FILENAME_BASE}& other);",
            "        ${TM_FILENAME_BASE}& operator=(const ${TM_FILENAME_BASE}& other);",
            "        ~${TM_FILENAME_BASE}();",
            "};",
            "",
            "#endif"
        ],
        "description": "Creates a C++ class template with private section before public"
    },
    "C++ Main Template": {
        "prefix": "MAIN",
        "body": [
            "/* ************************************************************************** */",
            "/*                                                                            */",
            "/*                                                        :::      ::::::::   */",
            "/*   main.cpp                                           :+:      :+:    :+:   */",
            "/*                                                    +:+ +:+         +:+     */",
            "/*   By: ${1:andre-da} <${2:andre-da@student.42.fr}>          +#+  +:+       +#+        */",
            "/*                                                +#+#+#+#+#+   +#+           */",
            "/*   Created: ${3:2023/10/04} ${4:15:32:24} by ${1:andre-da}          #+#    #+#             */",
            "/*   Updated: ${5:2023/10/10} ${6:18:14:36} by ${1:andre-da}         ###   ########.fr       */",
            "/*                                                                            */",
            "/* ************************************************************************** */",
            "",
            "#include \"../includes/\"",
            "",
            "int main(int argc, char *argv[])",
            "{",
            "",
            "    return (0);",
            "}"
        ],
        "description": "Creates a simple C++ main function template with header comment"
    },
    "C++ Library Header Template": {
        "prefix": "LIBFT",
        "body": [
            "/* ************************************************************************** */",
            "/*                                                                            */",
            "/*                                                        :::      ::::::::   */",
            "/*   main.cpp                                           :+:      :+:    :+:   */",
            "/*                                                    +:+ +:+         +:+     */",
            "/*   By: ${1:andre-da} <${2:andre-da@student.42.fr}>          +#+  +:+       +#+        */",
            "/*                                                +#+#+#+#+#+   +#+           */",
            "/*   Created: ${3:2023/10/04} ${4:15:32:24} by ${1:andre-da}          #+#    #+#             */",
            "/*   Updated: ${5:2023/10/10} ${6:18:14:36} by ${1:andre-da}         ###   ########.fr       */",
            "/*                                                                            */",
            "/* ************************************************************************** */",
            "",
            "#ifndef LIBFT_H",
            "# define LIBFT_H",
            "",
            "# include <iostream>        // For input and output stream",
            "# include <string>          // For string class and functions",
            "# include <cstring>         // For C-style string functions",
            "# include <cmath>           // For common mathematical functions",
            "# include <vector>          // For the vector container",
            "# include <algorithm>       // For standard algorithms (sort, find, etc.)",
            "# include <map>             // For the map container",
            "# include <unordered_map>   // For the unordered_map container",
            "# include <set>             // For the set container",
            "# include <unordered_set>   // For the unordered_set container",
            "# include <queue>           // For the queue container",
            "# include <stack>           // For the stack container",
            "# include <list>            // For the list container",
            "# include <deque>           // For the deque container",
            "# include <iterator>        // For iterators",
            "# include <functional>      // For function objects and predefined function objects",
            "# include <utility>         // For pair and utility functions",
            "# include <sstream>         // For string stream classes",
            "# include <fstream>         // For file stream classes",
            "# include <iomanip>         // For input/output manipulation",
            "# include <chrono>          // For time utilities",
            "# include <thread>          // For threading support",
            "# include <mutex>           // For mutual exclusion primitives",
            "# include <atomic>          // For atomic operations",
            "# include <memory>          // For smart pointers (unique_ptr, shared_ptr, etc.)",
            "# include <exception>       // For standard exception classes",
            "# include <stdexcept>       // For standard exception classes (runtime_error, etc.)",
            "# include <limits>          // For numeric limits",
            "# include <typeinfo>        // For type information",
            "# include <random>          // For random number generation",
            "# include <bitset>          // For bitset operations",
            "",
            "void    errorMessage(std::string message);",
            "",
            "#endif"
        ],
        "description": "Creates a C++ library header file template with necessary includes"
    }
}
